import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0
def propertiesFileName = "app.properties"

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")

    return df.format(new Date())
}

android {
    signingConfigs {
        config {
            storeFile file('habitat.jks')
            keyAlias 'habitat'
            keyPassword '123456'
            storePassword '123456'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    defaultConfig {
        applicationId "com.sumauto.app"
        minSdkVersion 15
        targetSdkVersion 23
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        //noinspection GroovyAssignabilityCheck
        def propertiesFile = file(propertiesFileName)
        if (!propertiesFile.exists()) {
            def commentMessage = "put your settings here"
            ant.propertyfile(file: propertiesFileName, comment: commentMessage) {
                //the keys added here are invalid, just placeholders to make builds pass
                entry(key: "host", value: "www.sina.com")
            }
        }
        Properties properties = new Properties();
        properties.load(new FileInputStream(file(propertiesFileName)));
        buildConfigField "String", "HOST", "\"${properties.getProperty("host")}\""
        signingConfig signingConfigs.config
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def releaseName
            def build_type = variant.buildType.name
            releaseName = 'Habitat-' + build_type + '-v' + versionName + '.apk'

            output.outputFile = new File(oldFile.parent, releaseName);
        }
    }
    productFlavors {
    }
}


def androidSupportVersion = "23.0.1"

dependencies {
    //noinspection GroovyAssignabilityCheck
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile('com.android.support:design:' + androidSupportVersion,
            'com.jakewharton:butterknife:7.0.1'
    )
    compile project(':SLibrary')
    compile 'com.eftimoff:android-pathview:1.0.8@aar'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'jp.wasabeef:blurry:2.0.0'
    compile 'com.bigkoo:pickerview:2.0.8'
    //compile 'cn.finalteam:galleryfinal:1.4.8.7'
}
