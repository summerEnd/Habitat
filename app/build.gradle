import com.google.gson.internal.LinkedTreeMap

apply plugin: 'com.android.application'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

Properties configs = new Properties()
configs.load(new FileInputStream(file("config.properties")))

String APP_KEY = configs['UM_APP_KEY']
String SCHEMA = configs['SCHEMA']
String USER_HOST = configs['USER_HOST']
String ACCOUNT_TYPE = configs['ACCOUNT_TYPE']

android {

    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        renderscriptTargetApi 22
        renderscriptSupportModeEnabled true
        applicationId "com.sumauto.habitat"
        minSdkVersion 15
        targetSdkVersion 23
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        versionCode 1
        resValue "integer", 'versionCode', "$versionCode"
        resValue "string", 'versionName', versionName
        resValue "string", 'account_type', ACCOUNT_TYPE

        configs.keySet().each {key->
            buildConfigField "String", key, "\"${configs.get(key)}\""
        }
        manifestPlaceholders = [UM_KEY: APP_KEY, UM_CHN: '0001', USER_HOST: USER_HOST, SCHEMA: SCHEMA]
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        config {
            storeFile file('habitat.jks')
            keyAlias 'habitat'
            keyPassword '123456'
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
        fast_debug {
            signingConfig signingConfigs.config
            debuggable true
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def releaseName
            def build_type = variant.buildType.name
            releaseName = 'Habitat-' + build_type + '-v' + versionName + '.apk'

            output.outputFile = new File(oldFile.parent, releaseName);
        }
    }




}


dependencies {
    //noinspection GroovyAssignabilityCheck
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'libs/api', include: ['*.jar'])
    compile project(':SLibrary')
    testCompile 'junit:junit:4.12'
    compile('com.android.support:design:23.3.0', 'com.android.support:support-v4:23.3.0')

    //compile 'com.umeng.analytics:analytics:latest.integration'
    //compile 'com.eftimoff:android-pathview:1.0.8@aar'
    compile 'jp.wasabeef:blurry:2.0.0'
    //compile 'com.bigkoo:pickerview:2.0.8'
    //compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.android.support:cardview-v7:23.3.0'
}
